version: '3.8'
services:
  
  wordpress:
    image: ${PROJECT_NAME:-dev}_wordpress
    container_name: ${PROJECT_NAME:-dev}_wordpress
    build:
      context: .
      dockerfile: Dockerfile-wordpress
      args:
        WP_VERSION: ${WP_VERSION:-5.8.1}
        HOST_USER: ${USER:-www-data}
        WP_CONFIG_IMPORT_PATH: ${WP_CONFIG_IMPORT_PATH}
    ports:
      - "${WORDPRESS_PORT:-9000}:80"
    volumes:
      - ./configs/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./wp-content:/var/www/html/wp-content
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: ${PROJECT_NAME:-dev}_mysql:3306
      WORDPRESS_DB_NAME: ${DB_NAME:-wordpress}
      WORDPRESS_DB_USER: ${DB_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD:-wordpress}

  db:
    image: mysql:latest
    container_name: ${PROJECT_NAME:-dev}_mysql
    volumes:
      - db_data:/var/lib/mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-wordpress}
      MYSQL_DATABASE: ${DB_NAME:-wordpress}
      MYSQL_USER: ${DB_USER:-wordpress}
      MYSQL_PASSWORD: ${DB_PASSWORD:-wordpress}
  
  adminer:
    image: adminer
    container_name: ${PROJECT_NAME:-dev}_adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-9500}:8080"

  # elasticsearch:
  #   image: ${PROJECT_NAME:-dev}_elasticsearch
  #   container_name: ${PROJECT_NAME:-dev}_elasticsearch
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-elasticsearch
  #   restart: unless-stopped
  #   expose:
  #     - "9200"
  #   environment:
  #     discovery.type: single-node
  #     xpack.security.enabled: 'false'
  #     mem_limit: 2048M
  #     mem_reservation: 2048M
  #     ES_JAVA_OPTS: '-Xms512m -Xmx512m'
  #   volumes:
  #     - './configs/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml'
  #     - 'elasticsearch_data:/usr/share/elasticsearch/data'

volumes:
  db_data:
    name: ${PROJECT_NAME:-dev}_db_data
  # elasticsearch_data:
  #   name: ${PROJECT_NAME:-dev}_elasticsearch_data
